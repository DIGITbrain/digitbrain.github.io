# This is a basic workflow to help you get started with Actions

name: Generate docs and publish

on:
  # Triggers the workflow on push events for main and any fix/* feat/* branches
  push:
    branches:
      - main
      - "*/*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  generate:
    name: Generate docs from AMDR and Excel
    runs-on: ubuntu-latest

    # Define outputs for the auto-commit step
    outputs:
      changed: ${{ steps.auto_commit.outputs.changes_detected }}
      commit: ${{ steps.auto_commit.outputs.commit_hash }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tools/requirements.txt

      - name: Pull latest OpenAPI spec
        run: curl -L https://dbs-api.emgora.eu/v1/emgamr/api/ -o tools/swagger.json || echo "::warning::Failed to grab latest OpenAPI Specification!!"

      - name: Run postgrest-to-detail (generate fields listing)
        run: python tools/postgrest-to-detail.py

      - name: Run example2md (generate tables for examples)
        run: python tools/example2md.py

      - name: Run excel2json (generate json from example xlsx)
        run: python tools/exceltojson.py --generate examples/*.xlsx

      - name: Commit any changes made by xls2md/xls2mkdocs/excel2json
        id: auto_commit
        uses: stefanzweifel/git-auto-commit-action@v4.12.0
        with:
          commit_message: ${{ github.event.head_commit.message }} [AUTO]
          file_pattern: docs/*/*.md docs/*/*/*.md examples/json/*.json

  publish:
    name: Publish the site
    runs-on: ubuntu-latest
    needs: generate
    if: |
      github.repository == 'DIGITbrain/digitbrain.github.io' &&
      github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository using auto-commit
        if: needs.generate.outputs.changed == 'true'
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.generate.outputs.commit }}

      - name: Checkout repository normally
        if: needs.generate.outputs.changed == 'false'
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Install Mkdocs
        run: pip install mkdocs-material==9.1.4 swagger-markdown==0.9.16

      - name: Run Mkdocs deploy
        run: mkdocs gh-deploy --force
