auth_type:
  description: supported authentication type
  example: '["tls_mutual", "userpass"]'
  type: List[DATA_AUTH_TYPE]
aux_info:
  description: List of key-value pairs (JSON object/YAML dictionary) supported by
    the data resource. New keys can be added on demand, a list of known keys is available.
  example: '{"PROTOCOL": "http", "MYSQL_DIALECT": "mariadbdialect", "MQTT_PROTOCOL_VERSION":
    "3.1.1", "KAFKA_BROKER_VERSION": "2.7.0", "S3_REGION": "eu-central-1"}'
  type: Map[String, String]
direction:
  description: 'supported direction of data flow (source: data provider, sink: data
    consumer/storage)'
  example: '["SOURCE", "BIDIRECTIONAL"]'
  type: List[DATA_DIRECTION]
format:
  description: supported format/encoding of the data produced or consumed by the data
    resource as a MIME type (IETF RFC 6838 https://www.sitepoint.com/mime-types-complete-list/).
    More than one can appear here (remote directory with several files).
  example: '["application/zip", "image/jpg"]'
  type: List[DATA_FORMAT]
id:
  description: human-readable identifier, unique within a Microservice
  example: '"MY_SINK"'
  type: String
kind:
  description: supported types of the data resource (e.g. file/object storage, database
    management system, streaming broker). FILE can mean a single file or a folder.
  example: '["FILE", "STREAM"]'
  type: List[DATA_KIND]
schema:
  description: supported internal message structure, semantics, ontology. It can be
    any file (doc, rdf, owl, etc.). Asset Administration Shell, IEC 61360 - Common
    Data Dictionary, â€¦
  example: '["jpg"]'
  type: List[DATA_SCHEMA]
type:
  description: supported exact type of the data resource. Typically corresponds to
    the scheme part (protocol://) of DATA_URI
  example: '["MYSQL", "KAFKA"]'
  type: List[DATA_SOURCE_TYPE]
source_type:
  hide: True